// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoesSopAPI.Data;

#nullable disable

namespace ShoesSopAPI.Migrations
{
    [DbContext(typeof(DBShop))]
    [Migration("20221003081253_add_nickname")]
    partial class add_nickname
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShoesSopAPI.Models.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("GioHang", (string)null);
                });

            modelBuilder.Entity("ShoesSopAPI.Models.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("KhachHangId")
                        .HasColumnType("int")
                        .HasColumnName("KhachHangID");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnName("SanPhamID");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("ShoesSopAPI.Models.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("Ngaysinh")
                        .HasColumnType("date");

                    b.Property<string>("Sđt")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SĐT");

                    b.HasKey("Id");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("ShoesSopAPI.Models.LoaiSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("LoaiSanPham", (string)null);
                });

            modelBuilder.Entity("ShoesSopAPI.Models.NhanVien", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("Ngaysinh")
                        .HasColumnType("date");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sđt")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("SĐT");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("ShoesSopAPI.Models.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Anh")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CreatedbyId")
                        .HasColumnType("int")
                        .HasColumnName("createdbyID");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("Loai")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("date");

                    b.Property<int?>("Sale")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("ShoesSopAPI.Models.GioHang", b =>
                {
                    b.HasOne("ShoesSopAPI.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("KhachHangId")
                        .IsRequired()
                        .HasConstraintName("FK_GioHang_KhachHang1");

                    b.HasOne("ShoesSopAPI.Models.SanPham", "SanPham")
                        .WithMany("GioHangs")
                        .HasForeignKey("SanPhamId")
                        .IsRequired()
                        .HasConstraintName("FK_GioHang_SanPham");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ShoesSopAPI.Models.HoaDon", b =>
                {
                    b.HasOne("ShoesSopAPI.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachHangId")
                        .IsRequired()
                        .HasConstraintName("FK_HoaDon_KhachHang");

                    b.HasOne("ShoesSopAPI.Models.SanPham", "SanPham")
                        .WithMany("HoaDons")
                        .HasForeignKey("SanPhamId")
                        .IsRequired()
                        .HasConstraintName("FK_HoaDon_SanPham");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ShoesSopAPI.Models.KhachHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("ShoesSopAPI.Models.SanPham", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
